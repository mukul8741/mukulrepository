/*import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;



public class MapTest {
    public static void main(String[] args) {
		List<String> al=Arrays.asList("hello","aBC", "raM");
		//Function f=
		al.stream().map(arg0 -> {
				// TODO Auto-generated method stub
			    return "hello1";
			}
			
			
		).forEach(i->System.out.println(i));
		
	}
}


*/

import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class MapTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		List<Integer> number = Arrays.asList(8,3,4,5); 
		  
	    // demonstration of map method 
	    List<Integer> square = number.stream().map(x -> x*x). 
	                           collect(Collectors.toList()); 
	    System.out.println(square); 
	  
	    // create a list of String 
	    List<String> names = 
	                Arrays.asList("Reflection","Collection","Stream"); 
	  
	    // demonstration of filter method 
	    List<String> result = names.stream().filter(s->s.startsWith("C")). 
	                          collect(Collectors.toList()); 
	    System.out.println(result); 
	  
	    // demonstration of sorted method 
	    List<String> show = 
	            names.stream().sorted().collect(Collectors.toList()); 
	    System.out.println(show); 
	  
	    // create a list of integers 
	    List<Integer> numbers = Arrays.asList(2,3,4,5,2); 
	  
	    // collect method returns a set 
	    Set<Integer> squareSet = 
	         numbers.stream().map(x->x*x).collect(Collectors.toSet()); 
	    System.out.println(squareSet); 
	  
	    // demonstration of forEach method 
	    number.stream().map(x->x*x).forEach(y->System.out.println(y)); 
	  
	    // demonstration of reduce method 
	    int even = 
	       number.stream().filter(x->x%2==0).reduce(0,(ans,i)-> ans+i); 
	  
	    System.out.println(even); 
		
	}

}